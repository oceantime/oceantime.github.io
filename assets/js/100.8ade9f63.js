(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{481:function(a,t,e){"use strict";e.r(t);var n=e(42),s=Object(n.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[a._v("#")]),a._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),a._v(" "),e("p",[a._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),a._v(" "),e("h3",{attrs:{id:"_1-algorithm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[a._v("#")]),a._v(" 1.Algorithm:")]),a._v(" "),e("p",[a._v("字符串问题练习：https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/x2uudv/")]),a._v(" "),e("ul",[e("li",[a._v("反转字符串")]),a._v(" "),e("li",[a._v("整数反转")]),a._v(" "),e("li",[a._v("字符串中的第一个唯一字符")]),a._v(" "),e("li",[a._v("有效的字母异位词")]),a._v(" "),e("li",[a._v("验证回文串")]),a._v(" "),e("li",[a._v("字符串转换整数 (atoi)")]),a._v(" "),e("li",[a._v("实现 strStr()")]),a._v(" "),e("li",[a._v("外观数列")]),a._v(" "),e("li",[a._v("最长公共前缀")])]),a._v(" "),e("h3",{attrs:{id:"_2-review"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[a._v("#")]),a._v(" 2.Review:")]),a._v(" "),e("p",[a._v("https://developpaper.com/how-to-use-lua-to-expand-in-golang/\n如何在 Golang 中扩展使用 Lua 脚本")]),a._v(" "),e("h4",{attrs:{id:"点评："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[a._v("#")]),a._v(" 点评：")]),a._v(" "),e("p",[a._v("最近，需要在项目中使用 Lua 进行扩展。发现在 GitHub 上有一个用 golang 编写的 Lua 虚拟机，名为 gopher Lua 。使用后还不错，所以我将与您分享。我不会多说。让我们看一下详细的介绍。")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("数据类型：")])]),a._v(" "),e("li",[e("p",[a._v("Lua 中的数据类型和 golang 中的数据类型之间的对应关系。值得注意的是，类型以 L 开头，类型名称以 Lt 开头将 golang 中的数据转换为 Lua 中的数据时，必须将其转换为以 L 开头的类型：")])])]),a._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('str := "hello"\nnum := 10\nL.LString(str)\nL.LNumber(float64(num))\n')])])]),e("ul",[e("li",[a._v("Lua 中的数据将转换为 golang 中的数据。该项目提供 toint 和 checkstring 等功能进行转换。但是，您必须事先知道类型。如果您不知道，则必须判断类型：")])]),a._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("value := L.Get(1)\nswitch value.Type() {\ncase lua.LTString:\ncase lua.LTTable:\n....\n}\n")])])]),e("ul",[e("li",[e("p",[a._v("Golang 和 Lua 互相调用功能")])]),a._v(" "),e("li",[e("p",[a._v("golang 中的函数必须转换为 func（L * Lua。State）int 才能注入 Lua。返回参数的 int 表示返回参数的数量")])])]),a._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('func hello(L *lua.State) int {\n  //Push the return parameter into the stack\n  L.Push(lua.LString("hello"))\n  //1 return parameter\n  return 1\n}\n//Injected into Lua\nL.SetGlobal("hello", L.NewFunction(hello))\n')])])]),e("ul",[e("li",[a._v("在 golang 中调用 Lua 函数，Lua 脚本必须首先定义该函数，然后调用 CallByParam 进行调用：")])]),a._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('//Get the functions defined in Lua first\nfn := L.GetGlobal("hello")\nif err := L.CallByParam(lua.P{\n Fn: fn,\n NRet: 1,\n Protect: true,\n }, lua.LNumber(10)); err != nil {\n panic(err)\n}\n//Get the function return value here\nret := L.Get(-1)\n')])])]),e("ul",[e("li",[a._v("Table")]),a._v(" "),e("li",[a._v("Lua 中的表是非常强大的功能。该项目还为许多表方法提供了支持，例如获取字段和添加字段。在这里，建议使用 glumapper，它可以将 table 转换为 golang 中的结构或 map [string]接口{}的类型。在这里，使用作者提供的示例：")])]),a._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('type Role struct {\n Name string\n}\n\ntype Person struct {\n Name  string\n Age  int\n WorkPlace string\n Role  []*Role\n}\n\nL := lua.NewState()\nif err := L.DoString(`\nperson = {\n name = "Michel",\n age = "31", -- weakly input\n work_place = "San Jose",\n role = {\n {\n  name = "Administrator"\n },\n {\n  name = "Operator"\n }\n }\n}\n`); err != nil {\n panic(err)\n}\nvar person Person\nif err := gluamapper.Map(L.GetGlobal("person").(*lua.LTable), &person); err != nil {\n panic(err)\n}\nfmt.Printf("%s %d", person.Name, person.Age)\n')])])]),e("ul",[e("li",[a._v("模块加载和使用")]),a._v(" "),e("li",[a._v("项目中提供了 Lua 基本模块，可以通过调用 openlibs 来加载它们，包括 IO，math，OS，debug 等。如果要自己加载，可以使用 skipponlibs 参数跳过，如果您要开发自己的库，则在文档中也对此进行了说明：")])]),a._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('func Loader(L *lua.LState) int {\n //Export function in registration module\n mod := L.SetFuncs(L.NewTable(), exports)\n L.Push(mod)\n return 1\n}\n\nvar exports = map[string]lua.LGFunction{\n "myfunc": myfunc,\n}\n\nfunc myfunc(L *lua.LState) int {\n return 0\n}\n//Here you can load the mymodule module\nL.PreloadModule("mymodule", mymodule.Loader)\n')])])]),e("p",[a._v("注：这里仅简要介绍一些基本用法。项目中还有一些不受支持的部分，例如 package.loadlib。")]),a._v(" "),e("h3",{attrs:{id:"_3-tip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[a._v("#")]),a._v(" 3.Tip:")]),a._v(" "),e("h4",{attrs:{id:"解决-go-get-golang-org-x-包失败问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决-go-get-golang-org-x-包失败问题"}},[a._v("#")]),a._v(" 解决 go get golang.org/x 包失败问题")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("手动下载：\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOPATH")]),a._v("/src/golang.org/x\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOPATH")]),a._v("/src/golang.org/x\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone git@github.com:golang/text.git\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -rf text/.git\n\n设置代理：\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("http_proxy")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://proxyAddress:port\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("https_proxy")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://proxyAddress:port\n或者，直接用 all_proxy：\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("all_proxy")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://proxyAddress:port\n\ngo mod replace：\nmodule example.com/hello\n\nrequire "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    golang.org/x/text v0.3.0\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\nreplace "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    golang.org/x/text "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" github.com/golang/text v0.3.0\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\nGOPROXY 环境变量：\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOPROXY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("https://goproxy.io\n注意：需要依赖于 go module 功能, 可通过 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GO111MODULE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("on 开启 MODULE。\n")])])]),e("h3",{attrs:{id:"_4-share"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[a._v("#")]),a._v(" 4.Share:")]),a._v(" "),e("p",[a._v("https://my.oschina.net/freegeek/blog/3046942\n国内下载golang.org/x简单方法")])])}),[],!1,null,null,null);t.default=s.exports}}]);