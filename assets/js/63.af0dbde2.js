(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{444:function(a,t,s){"use strict";s.r(t);var n=s(42),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[a._v("#")]),a._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),a._v(" "),s("p",[a._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),a._v(" "),s("h3",{attrs:{id:"_1-algorithm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[a._v("#")]),a._v(" 1.Algorithm:")]),a._v(" "),s("p",[a._v("Minimum Window Substring https://leetcode.com/submissions/detail/384577085/")]),a._v(" "),s("h3",{attrs:{id:"_2-review"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[a._v("#")]),a._v(" 2.Review:")]),a._v(" "),s("p",[a._v("https://www.oreilly.com/content/the-state-of-data-analytics-and-visualization-adoption/\n数据分析和可视化采用的状态")]),a._v(" "),s("h4",{attrs:{id:"点评："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[a._v("#")]),a._v(" 点评：")]),a._v(" "),s("p",[a._v("2017年春季，Zoomdata委托O'Reilly Media创建并执行一项评估数据和分析行业状况的调查。重点是了解现代大数据和流数据技术的渗透，用户如何使用数据分析以及组织对人员配备最感兴趣的技能。来自不同行业以及政府和学术界的近900人对此调查做出了回应。以下是调查提供的一些见解的预览。")]),a._v(" "),s("p",[a._v("1.当然，关系数据库仍然是在线事务处理（OLTP）系统的核心。但是，最有趣的发现之一是，当被问及组织的主要数据来源时，不到三分之一的受访者列出了关系数据库，而大约三分之二的人选择了非关系来源。\n2.这些现代数据源经过优化，可以处理大数据的“三个V”：非常大的数据量；高速流数据；以及各种各样的非结构化和半结构化数据，例如文本和日志文件。\n3.分析数据库（19％）和Hadoop（14％）是两个最受欢迎的非关系源。")]),a._v(" "),s("p",[a._v("参考资料：http://go.zoomdata.com/l/190352/2017-09-22/515vpz\n具有生产和开发中的大数据项目的组织的比例\n不同级别的数据新鲜度对组织有多么重要\n最受欢迎的流数据平台\n组织要配备的主要技术技能\n组织是通过独立的BI应用程序使用分析还是作为嵌入其他业务应用程序和流程的分析组件使用")]),a._v(" "),s("h3",{attrs:{id:"_3-tip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[a._v("#")]),a._v(" 3.Tip:")]),a._v(" "),s("p",[a._v("Velocity 模板引擎介绍")]),a._v(" "),s("p",[a._v("Velocity 是一个基于 java 的模板引擎（template engine）。它允许任何人仅仅简单的使用模板语言（template language）来引用由 java 代码定义的对象。当 Velocity 应用于web开发时，界面设计人员可以和 java 程序开发人员同步开发一个遵循 MVC 架构的 web 站点，也就是说，页面设计人员可以只关注页面的显示效果，而由 java 程序开发人员关注业务逻辑编码。")]),a._v(" "),s("ol",[s("li",[a._v("Velocity 基本语法")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"#"')]),a._v("用来标识 "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Velocity")]),a._v(" 的关键字，包括 #set、#"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" 、#"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("、#end、#foreach、#end、#include、#parse、#macro 等；\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"$"')]),a._v("用来标识 "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Velocity")]),a._v(" 的变量；如：$i、$msg、$"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TagUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 等。\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{}"')]),a._v("用来明确标识 "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Velocity")]),a._v(" 变量；比如在页面中，页面中有一个 $someonename，此时，"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Velocity")]),a._v(" 将把 someonename 作为变量名，若我们程序是想在 someone 这个变量的后面紧接着显示 name 字符，则上面的标签应该改成 $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("someone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("name。\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"!"')]),a._v("用来强制把不存在的变量显示为空白。如：当找不到 username 的时候，$username 返回字符串 "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"$username"')]),a._v("，而 $"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("username 返回空字符串"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("Velocity 语法使用")])]),a._v(" "),s("h4",{attrs:{id:"变量定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量定义"}},[a._v("#")]),a._v(" 变量定义")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"velocity"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("等号后面的字符串 Velocity 引擎将重新解析，例如出现以$开始的字符串时，将做变量的替换。")]),a._v(" "),s("h4",{attrs:{id:"变量赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量赋值"}},[a._v("#")]),a._v(" 变量赋值")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$hello "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello $name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v('上面的这个等式将会给$hello赋值为"velocity"')]),a._v(" "),s("h4",{attrs:{id:"循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[a._v("#")]),a._v(" 循环")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$element in $list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n    "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("span"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("$"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("element"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("br"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n#end\n")])])]),s("p",[a._v("Velocity引擎会将list中的值循环赋给element变量")]),a._v(" "),s("h4",{attrs:{id:"条件语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件语句"}},[a._v("#")]),a._v(" 条件语句")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("#"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("elseif")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n…\n#"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n…\n#end\n")])])]),s("h4",{attrs:{id:"关系操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系操作符"}},[a._v("#")]),a._v(" 关系操作符")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("#"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" $bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n#end\n")])])]),s("p",[a._v("Velocity 引擎提供了 AND、OR 和 NOT 操作符，分别对应 &&、|| 和 !")]),a._v(" "),s("h4",{attrs:{id:"关系操作符-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系操作符-2"}},[a._v("#")]),a._v(" 关系操作符")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\n")])])]),s("h4",{attrs:{id:"宏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#宏"}},[a._v("#")]),a._v(" 宏")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Velocity")]),a._v(" 中的宏可以理解为函数定义\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("macro")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("macroName arg1 arg2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n#end\n\n调用这个宏的语法是\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("macroName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arg1 arg2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n这里的参数之间使用空格隔开，下面是定义和使用 "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Velocity")]),a._v(" 宏的例子：\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("macro")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("sayHello $name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    hello $name\n#end\n\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"velocity"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n输出的结果为 hello velocity\n")])])]),s("h4",{attrs:{id:"parse-和-include"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parse-和-include"}},[a._v("#")]),a._v(" #parse 和 #include")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("#parse 和 #include 指令的功能都是在外部引用文件，而两者的区别是，#parse 会将引用的内容当成类似于源码文件，会将内容在引入的地方进行解析，#include 是将引入文件当成资源文件，会将引入内容原封不动地以文本输出。分别看以下例子：\n\nfoo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vm 文件：\n\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"velocity"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nparse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vm：\n\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo.vm"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n输出结果为：velocity\n\ninclude"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vm：\n\n#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo.vm"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n输出结果为：#"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"velocity"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h4",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("单行注释\n\n##单行注释\n多行注释\n\n#"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("\n    多行注释\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("#\n")])])]),s("h4",{attrs:{id:"单双引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单双引号"}},[a._v("#")]),a._v(" 单双引号")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("单引号不解析引用内容，双引号解析引用内容\n\n#set "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'$var'")]),a._v("  ## 结果为：$"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"$var"')]),a._v("  ## 结果为：hello\n")])])]),s("h4",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("通过"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'.'")]),a._v("操作符使用变量内容\n\n$"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Identifier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Identifier")]),a._v("\n$user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name\n")])])]),s("h3",{attrs:{id:"_4-share"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[a._v("#")]),a._v(" 4.Share:")]),a._v(" "),s("p",[a._v("http://blog.itpub.net/31559354/viewspace-2712458/\nClickHouse留存分析工具十亿数据秒级查询方案")])])}),[],!1,null,null,null);t.default=e.exports}}]);