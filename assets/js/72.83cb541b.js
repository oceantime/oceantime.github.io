(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{451:function(t,s,n){"use strict";n.r(s);var a=n(42),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[t._v("#")]),t._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),t._v(" "),n("p",[t._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),t._v(" "),n("h3",{attrs:{id:"_1-algorithm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[t._v("#")]),t._v(" 1.Algorithm:")]),t._v(" "),n("p",[t._v("数组中的逆序对 https://leetcode-cn.com/submissions/detail/118306359/")]),t._v(" "),n("h3",{attrs:{id:"_2-review"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[t._v("#")]),t._v(" 2.Review:")]),t._v(" "),n("p",[t._v("https://plumbr.eu/outofmemoryerror/gc-overhead-limit-exceeded\nJava heap space")]),t._v(" "),n("h4",{attrs:{id:"点评："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[t._v("#")]),t._v(" 点评：")]),t._v(" "),n("p",[t._v("java.lang.OutOfMemoryError: GC overhead limit exceeded 这种情况发生的原因是, 程序基本上耗尽了所有的可用内存, GC也清理不了。")]),t._v(" "),n("p",[t._v("原因分析\nJVM抛出 java.lang.OutOfMemoryError: GC overhead limit exceeded 错误就是发出了这样的信号: 执行垃圾收集的时间比例太大, 有效的运算量太小. 默认情况下, 如果GC花费的时间超过 98%, 并且GC回收的内存少于 2%, JVM就会抛出这个错误。")]),t._v(" "),n("p",[t._v("解决方案\n有一种应付了事的解决方案, 就是不想抛出 “java.lang.OutOfMemoryError: GC overhead limit exceeded” 错误信息, 则添加下面启动参数:\n// 不推荐\n-XX:-UseGCOverheadLimit\n强烈建议不要指定该选项: 因为这不能真正地解决问题，只能推迟一点 out of memory 错误发生的时间，到最后还得进行其他处理。\n如果想从根本上解决问题, 则需要排查内存分配相关的代码. 简单来说, 需要回答以下问题:")]),t._v(" "),n("ul",[n("li",[t._v("哪类对象占用了最多内存？")]),t._v(" "),n("li",[t._v("这些对象是在哪部分代码中分配的。")])]),t._v(" "),n("p",[t._v("要搞清这一点, 可能需要好几天时间。下面是大致的流程:")]),t._v(" "),n("ul",[n("li",[t._v("获得在生产服务器上执行堆转储(heap dump)的权限。“转储”(Dump)是堆内存的快照, 稍后可以用于内存分析. 这些快照中可能含有机密信息, 例如密码、信用卡账号等, 所以有时候, 由于企业的安全限制, 要获得生产环境的堆转储并不容易。")]),t._v(" "),n("li",[t._v("在适当的时间执行堆转储。一般来说,内存分析需要比对多个堆转储文件, 假如获取的时机不对, 那就可能是一个“废”的快照. 另外, 每次执行堆转储, 都会对JVM进行“冻结”, 所以生产环境中,也不能执行太多的Dump操作,否则系统缓慢或者卡死,你的麻烦就大了。")]),t._v(" "),n("li",[t._v("用另一台机器来加载Dump文件。一般来说, 如果出问题的JVM内存是8GB, 那么分析 Heap Dump 的机器内存需要大于 8GB. 打开转储分析软件(我们推荐Eclipse MAT , 当然你也可以使用其他工具)。")]),t._v(" "),n("li",[t._v("检测快照中占用内存最大的 GC roots。详情请参考: Solving OutOfMemoryError (part 6) – Dump is not a waste。 这对新手来说可能有点困难, 但这也会加深你对堆内存结构以及navigation机制的理解。")]),t._v(" "),n("li",[t._v("接下来, 找出可能会分配大量对象的代码. 如果对整个系统非常熟悉, 可能很快就能定位了。使用 Plumbr 能捕获所有的 java.lang.OutOfMemoryError , 并找出其他的性能问题, 例如最消耗内存的数据结构等等。")])]),t._v(" "),n("p",[t._v("Plumbr 在后台负责收集数据 —— 包括堆内存使用情况(只统计对象分布图, 不涉及实际数据),以及在堆转储中不容易发现的各种问题。 如果发生 java.lang.OutOfMemoryError , 还能在不停机的情况下, 做必要的数据处理. 下面是Plumbr 对一个 java.lang.OutOfMemoryError 的提醒:")]),t._v(" "),n("ul",[n("li",[t._v("哪类对象占用了最多的内存(此处是 271 个 com.example.map.impl.PartitionContainer 实例, 消耗了 173MB 内存, 而堆内存只有 248MB)")]),t._v(" "),n("li",[t._v("这些对象在何处创建(大部分是在 MetricManagerImpl 类中,第304行处)")]),t._v(" "),n("li",[t._v("当前是谁在引用这些对象(从 GC root 开始的完整引用链)")])]),t._v(" "),n("h3",{attrs:{id:"_3-tip"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[t._v("#")]),t._v(" 3.Tip:")]),t._v(" "),n("p",[t._v("elasticsearch 之 mapping")]),t._v(" "),n("p",[t._v("1.mapping 说明\nES 的 mapping 非常类似于静态语言中的数据类型：声明一个变量为 int 类型的变量， 以后这个变量都只能存储 int 类型的数据。同样的， 一个 number 类型的 mapping 字段只能存储 number 类型的数据。同语言的数据类型相比，mapping 还有一些其他的含义，mapping 不仅告诉 ES 一个 field 中是什么类型的值， 它还告诉 ES 如何索引数据以及数据是否能被搜索到。当查询没有返回相应的数据，mapping 很有可能有问题。当拿不准的时候，直接检查 mapping。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n如何查看当前数据库里面的 mapping（可以用postman或者浏览器访问以下链接）：\n\nhttp://127.0.0.1:9200/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/_mapping?pretty\n\n如果 index 为： b2bware, "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" 为：commerical_sku\n\nhttp://127.0.0.1:9200/b2bware/commercial_sku/_mapping?pretty\n\n以上是看某个 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" 下的 mapping 结构，如果你要看整个库的 mapping，URL 请去掉 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" 断即可，如：\n\nhttp://127.0.0.1:9200/b2bware/_mapping?pretty\n\n返回结果如：\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b2bware"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commercial_sku"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"price"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tid"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("2.mapping 的创建及修改方式\nmapping 一旦创建之后，就无法修改，只能追加，如果要修改，就需要删除掉整个文档进行重建。")]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[t._v('就是直接插入数据，然后 ES 根据插入数据格式自动识别创建 mapping\n如，创建一个ID为1 的新对象： http://127.0.0.1:9200/b2bware/newtable/1\n{\n "name":"test info ",\n  "content":"简单的json对象"\n}\n\n建index的时候，直接指定 mappings，可以一次性创建多个mapping,如下面的代码所示：\nURL:http://127.0.0.1:9200/b2bware\n参数body(放在post或者put请求的body部分)\n{\n  "settings": {\n    "index": {\n      "number_of_shards": "10",  //分10个片\n      "number_of_replicas": "1"  //1个备份\n    }\n  },\n  "mappings": {\n    "commercial_sku": { //这是其中一个mapping，你还可以创建其他mapping\n      "_timestamp": {  //这个配置可以删掉\n        "enabled": true\n      },\n        "properties": {\n          "message": {\n            "type": "string"\n          },\n          "price": {\n            "type": "string"\n          },\n          "tid": {\n            "type": "string"\n          },\n          "user": {\n            "type": "string"\n          }\n        }\n    }\n  }\n}\n\n已经创建了 index（库已经创建），新增一个 mapping\nURL:http://127.0.0.1:9200/b2bware/_mapping/article PUT 方式\n注意，这种创建方式 type[表名] 是在 URL 中指定的，BODY 部分只是指定了表结构：\n{\n    "properties": {\n      "message": {\n        "type": "string"\n      },\n      "price": {\n        "type": "string"\n      },\n      "tid": {\n        "type": "string"\n      },\n      "user": {\n        "type": "string"\n      }\n    }\n}\n')])])]),n("p",[t._v("mapping 的修改：\n因为 mapping 只能进行追加修改，所以在建 type 的时候，最好清晰的知道表结构，否则数据变更起来比较麻烦，就像 MySQL 中已经有一个 age 存储的是字符串，突然有一天想改为 int，因为存在历史数据，要变更就不那么容易,所以ES的mapping调整只能追加字段。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("新增一个 visitCount 字段：\nURL:http://127.0.0.1:9200/b2bware/article/_mapping PUT方式\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"visitCount"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("3.mapping 中的可设置的属性：\nmappings ： 在index（库）下创建时使用，下面可以有多个mapping 以下数据结构主要针对每个mapping进行说明：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("一级属性")]),t._v(" "),n("th",[t._v("二级属性")]),t._v(" "),n("th",[t._v("三级属性")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("dynamic")]),t._v(" "),n("td"),t._v(" "),n("td"),t._v(" "),n("td",[t._v("新增字段自动模式；true:表示自动识别新字段并创建索引，false:不自动索引新字段，strict:遇到未知字段，抛异常，不能存入")])]),t._v(" "),n("tr",[n("td",[t._v("_timestamp")]),t._v(" "),n("td"),t._v(" "),n("td"),t._v(" "),n("td",[t._v("是否使用时间戳，ES会自动加时间戳，使用的话请百度")])]),t._v(" "),n("tr",[n("td",[t._v("properties")]),t._v(" "),n("td"),t._v(" "),n("td"),t._v(" "),n("td",[t._v("属性列表（类似数据库多个字段定义）")])]),t._v(" "),n("tr",[n("td",[t._v("{字段名}")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("某个字段的定义")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("type")]),t._v(" "),n("td",[t._v("数据类型，参见数据类型说明")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("index")]),t._v(" "),n("td",[t._v("映射选型，参见映射选型说明")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("doc_values")]),t._v(" "),n("td",[t._v("布尔值， 对not_analyzed字段，默认都是开启，分词字段不能使用，对排序和聚合能提升较大性能，节约内存")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("format")]),t._v(" "),n("td",[t._v("如果数据类型为日期格式，传入值得时候是字符串，ES需要一个格式进行识别，如：yyyy-MM-dd HH:mm: ss")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("analyzer")]),t._v(" "),n("td",[t._v("分词器，如ik,ansj(中文分词)")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("boost")]),t._v(" "),n("td",[t._v("浮点型，字段级别的分数加权（权重）")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("ignore_above")]),t._v(" "),n("td",[t._v("超过多少字符，就不处理，分词性能损耗较大，对字符串较长的可不分词")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("null_value")]),t._v(" "),n("td",[t._v("设置一些缺失字段的初始化值，只有string可以使用，分词字段的null值也会被分词")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("store")]),t._v(" "),n("td",[t._v("是否单独设置此字段的是否存储而从_source字段中分离，默认是false，只能搜索，不能获取值")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("search_analyzer")]),t._v(" "),n("td",[t._v("设置搜索时的分词器，默认跟ananlyzer是一致的，比如index时用standard+ngram，搜索时用standard用来完成自动提示功能")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("其它")]),t._v(" "),n("td",[t._v("similarity，term_vector，norms，include_in_all，index_options，fielddata，ignore_malformed，precision_step")]),t._v(" "),n("td")])])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("一个典型的mapping对象的属性有：\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        //true:表示自动识别新字段并创建索引，false:不自动索引新字段，strict:遇到未知字段，抛异常，不能存入\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamic"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strict"')]),t._v(", \n            \n              //动态模板\n             "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamic_templates"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stash_template"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path_match"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stash.*"')]),t._v(",\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mapping"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v(",\n                        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not_analyzed"')]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n            //属性列表\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                //一个strign类型的字段\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n                \n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stash"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(",\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamic"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" \n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("4.Elasticsearch 数据类型\nElasticsearch 自带的数据类型是 Lucene 索引的依据，也是我们做手动映射调整到依据。 映射中主要就是针对字段设置类型以及类型相关参数。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("JSON 基础类型如下：\n字符串：string\n数字：byte、short、integer、long、float、double、\n时间：date\n布尔值: true、false\n数组: array\n对象: object\n\nElasticsearch 独有的类型：\n多重: multi\n经纬度: geo_point\n网络地址: "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v("\n堆叠对象: nested object\n二进制: binary\n附件: attachment\n\n复合类型:\n数组类型：没有明显的字段类型设置，任何一个字段的值，都可以被添加0个到多个，要求，他们的类型必须一致： 对象类型：存储类似json具有层级的数据 嵌套类型：支持数组类型的对象Aarray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("，可层层嵌套\n\n地理类型:\ngeo-point类型： 支持经纬度存储和距离范围检索\ngeo-shape类型：支持任意图形范围的检索，例如矩形和平面多边形\n\n专用类型 ipv4类型：用来存储IP地址，es内部会转换成long存储\ncompletion类型：使用fst有限状态机来提供suggest前缀查询功能\ntoken_count类型：提供token级别的计数功能\nmapper-murmur3类型：安装sudo bin/plugin "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" mapper-size插件，可支持_size统计_source数据的大小\n\n")])])]),n("p",[t._v("5.注意点：")]),t._v(" "),n("p",[t._v("Elasticsearch 映射虽然有 idnex 和 type 两层关系，但是实际索引时是以 index 为基础的。 如果同一个 index 下不同 type 的字段出现 mapping 不一致的情况 虽然数据依然可以成功写入并生成并生成各自的 mapping， 但实际上 fielddata 中的索引结果却依然是以 index 内第一个 mapping 类型来生成的。")]),t._v(" "),n("p",[t._v("6.映射选型说明")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("某个属性（字段）的index可选值有：\nanalyzed:默认选项，以标准的全文索引方式，分析字符串，完成索引。\nnot_analyzed:精确索引，不对字符串做分析，直接索引字段数据的精确内容。\nno：不索引该字段。\n\n")])])]),n("h3",{attrs:{id:"_4-share"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[t._v("#")]),t._v(" 4.Share:")]),t._v(" "),n("p",[t._v("https://sq.163yun.com/blog/article/184733100361850880\n基于JavaScript的代码编辑器的比较和选型")]),t._v(" "),n("p",[t._v("https://www.cnblogs.com/chen110xi/p/6210098.html\nFastDFS文件系统(二) fastdfs和其他文件系统区别")]),t._v(" "),n("p",[t._v("https://zhjwpku.com/2018/01/16/mysql-proxy-alternatives.htmls\nmysql proxy 性能测试对比")]),t._v(" "),n("p",[t._v("https://blog.csdn.net/sinat_35930259/article/details/80354732\nelasticsearch篇之mapping")])])}),[],!1,null,null,null);s.default=e.exports}}]);