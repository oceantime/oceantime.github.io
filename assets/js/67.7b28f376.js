(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{447:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[t._v("#")]),t._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),t._v(" "),s("p",[t._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),t._v(" "),s("h3",{attrs:{id:"_1-algorithm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[t._v("#")]),t._v(" 1.Algorithm:")]),t._v(" "),s("p",[t._v("Shortest Path in Binary Matrix https://leetcode.com/submissions/detail/398332905/")]),t._v(" "),s("h3",{attrs:{id:"_2-review"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[t._v("#")]),t._v(" 2.Review:")]),t._v(" "),s("p",[t._v("https://www.oreilly.com/content/rethinking-task-size-in-sre/\n重新思考任务大小")]),t._v(" "),s("h4",{attrs:{id:"点评："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[t._v("#")]),t._v(" 点评：")]),t._v(" "),s("p",[t._v("作者 Luis Otero and Ulrich Spörlein 发现以更少，更大的任务运行工作可以显着提高我们的效率（对于本文中描述的示例，该效率提高了25％），这促使我们探索并采用垂直扩展来提高我们的计算基础架构团队的效率。")]),t._v(" "),s("p",[t._v("为什么更大的副本会更高效？")]),t._v(" "),s("ul",[s("li",[t._v("任务成本分类：中间的框 v 指示与正在处理的工作量（例如，网络请求）成比例或至少相关的资源部分。底部的方框 f 表示开发人员为运行预定任务支付的费用。它是按副本修复的，不会因负载而变化。修复成本的示例包括程序中的静态变量，二进制文本，监视，日志记录以及保持前端/后端连接打开。因此，减少任务数量可以减少工作消耗的固定成本总额。")])]),t._v(" "),s("p",[t._v("多个数据点和观察结果表明，通过这种技术评估舰队可以节省大量资源。例如：")]),t._v(" "),s("ul",[s("li",[t._v("机器越来越大")]),t._v(" "),s("li",[t._v("有水平缩放的偏好")]),t._v(" "),s("li",[t._v("资源配置会随着时间而过时")]),t._v(" "),s("li",[t._v("高利用率并不意味着高效率")]),t._v(" "),s("li",[t._v("重塑可以（但是）提高利用率")])]),t._v(" "),s("p",[t._v("重新重塑工作，并迭代过程，在此过程中可以通过不同的大小来评估作业。具体步骤如下：")]),t._v(" "),s("ul",[s("li",[t._v("识别并监控相关的SLO和效率指标")]),t._v(" "),s("li",[t._v("选择要试验的任务")]),t._v(" "),s("li",[t._v("以适当的速度调整作业大小")]),t._v(" "),s("li",[t._v("评估收集到的效率指标，以确保赢得效率，同时仍要满足工作的SLO标准")]),t._v(" "),s("li",[t._v("如果度量标准分析表明该作业从调整大小中受益，请重复步骤3和4")])]),t._v(" "),s("p",[t._v("选择适当的指标")]),t._v(" "),s("ul",[s("li",[t._v("为了确定任务是否在提高生产率，有必要确定衡量效率的适当指标。效率指标通常表示为QPS / CPU（每CPU每秒查询数）或服务生产率。后者可能是特别有用的，因为它是用户定义的并且可以抽象出正在执行的实际工作。")])]),t._v(" "),s("p",[t._v("风险与警告")]),t._v(" "),s("ul",[s("li",[t._v("随着任务变大并开始处理更大的负载，可能会开始出现不同类型的现象，从而影响其继续扩展的能力-甚至在某些极端情况下危及服务的稳定性。")])]),t._v(" "),s("p",[t._v("权衡延迟以提高效率")]),t._v(" "),s("ul",[s("li",[t._v("重塑数据中心的服务可以为资源使用和效率带来好处。这些资源节省是通过降低此类服务的客户端看到的延迟来进行权衡的。")])]),t._v(" "),s("p",[t._v("结论：\n技术在机器尺寸上呈上升趋势。与其他因素一起，这为使用垂直可伸缩性提供了令人信服的理由，它可以减少工作的固定成本并提高软件效率。Google已经注意到并正在积极修改其工作形式，以减少其计算基础架构的占用空间，从而节省了实际的资金。")]),t._v(" "),s("h3",{attrs:{id:"_3-tip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[t._v("#")]),t._v(" 3.Tip:")]),t._v(" "),s("p",[t._v("Clickhouse 创建 MySQL 引擎表")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("\n语法：\nCREATE TABLE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("IF NOT EXISTS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("db."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("table_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ON CLUSTER cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    name1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEFAULT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("MATERIALIZED"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ALIAS expr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TTL expr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n    name2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEFAULT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("MATERIALIZED"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ALIAS expr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TTL expr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ENGINE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MySQL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'host:port'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'database'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'table'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(", replace_query, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'on_duplicate_clause'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n解释：\nhost:port MySQL服务器的地址和端口\ndatabase MySQL中的数据库名\ntable 表示需要映射的MySQL表名称\nuser mysql的用户名\npassword mysql的用户名对应的密码\nreplace_query 默认为0，对应于MySQL的REPLACE INTO 语法；若为1则会用replace into 代替insert into\non_duplicate_clause 默认为0 对应MySQL的 ON DUPLICATE KEY语法，若需要使用该设置则必须将replace——query 设置为0.\n\n")])])]),s("h3",{attrs:{id:"_4-share"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[t._v("#")]),t._v(" 4.Share:")]),t._v(" "),s("p",[t._v("https://www.zoomdata.com/master-class/state-market/state-data-analytics-and-visualization-adoption/?utm_source=oreilly&utm_medium=press-release&utm_content=master-class&utm_campaign=master-class-oreilly-state-of-data-analytics-sep-2017\n数据分析和可视化采用| 缩放数据")])])}),[],!1,null,null,null);a.default=e.exports}}]);