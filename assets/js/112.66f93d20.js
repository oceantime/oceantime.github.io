(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{498:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[t._v("#")]),t._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),t._v(" "),s("p",[t._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),t._v(" "),s("h3",{attrs:{id:"_1-algorithm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[t._v("#")]),t._v(" 1.Algorithm:")]),t._v(" "),s("ol",{attrs:{start:"315"}},[s("li",[s("p",[t._v("计算右侧小于当前元素的个数：https://leetcode-cn.com/submissions/detail/212526709/")])]),t._v(" "),s("li",[s("p",[t._v("寻找峰值：https://leetcode-cn.com/submissions/detail/212498647/")])]),t._v(" "),s("li",[s("p",[t._v("丢失的数字：https://leetcode-cn.com/submissions/detail/212490811/")])])]),t._v(" "),s("h3",{attrs:{id:"_2-review"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[t._v("#")]),t._v(" 2.Review:")]),t._v(" "),s("p",[t._v("https://www.mihaileric.com/posts/machine-learning-project-model-deployment/\n从零开始的完整机器学习项目：错误分析和模型 V2")]),t._v(" "),s("h4",{attrs:{id:"点评："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[t._v("#")]),t._v(" 点评：")]),t._v(" "),s("p",[t._v("在这篇文章中，将继续上文的地方，并考虑部署模型和建立一个连续的集成系统。这将能够不断更新、改进和测试代码：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("这些将涵盖以下所有内容：")]),t._v(" "),s("ul",[s("li",[t._v("构想、组织代码库和设置模组")]),t._v(" "),s("li",[t._v("数据集采集和探索性数据分析")]),t._v(" "),s("li",[t._v("使用 v1 模型构建和测试管道")]),t._v(" "),s("li",[t._v("执行错误分析并向 v2 模型重复")]),t._v(" "),s("li",[t._v("部署模型并连接连续集成解决方案（此帖子）")])])]),t._v(" "),s("li",[s("p",[t._v("快速回顾：\n本文将重点部署模型，包括构建一个 Chrome 扩展，可以拨打 REST API 的电话。之后，将讨论如何设置连续集成，以便能够不断更新、测试和部署项目的最新版本。。")])]),t._v(" "),s("li",[s("p",[t._v("设置预测休息 API")]),t._v(" "),s("ul",[s("li",[t._v("正如在第一篇文章中提到的，在这个项目中的目标是建立一个模型，可以部署作为Chrome网络扩展。这将需要模型实时进行预测的能力，因此需要在线推理解决方案。目前有两种可能的解决方案：\n"),s("ul",[s("li",[t._v("运行完整型号的客户端（即在浏览器中）。")]),t._v(" "),s("li",[t._v("运行模型服务器侧，并将REST API呼叫到服务器。")]),t._v(" "),s("li",[t._v("为此，将利用 python 网络框架：FastAPI。使用 FastAPI， REST API 的核心看起来像这样：")])])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseSettings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    model_dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v("\n\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FastAPI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsettings "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable CORS")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_middleware"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    CORSMiddleware"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    allow_origins"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    allow_credentials"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    allow_methods"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    allow_headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load model")]),t._v("\nconfig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"model_output_path"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("model_dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"featurizer_output_path"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("model_dir\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmodel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RandomForestModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Statement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Prediction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v("\n    probs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api/predict-fakeness"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response_model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Prediction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("predict_fakeness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("statement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Statement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    datapoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" construct_datapoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("statement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    probs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("predict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("datapoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    label "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argmax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("probs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" axis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    prediction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Prediction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("label"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" probs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("probs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    LOGGER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prediction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" prediction\n")])])]),s("ul",[s("li",[t._v("这定义了称为摄入文本语句、在适当定义的数据点上进行推理并输出响应对象的单个 REST 端点。/api/predict-fakenessPrediction 然后，可以使用以下命令在本地运行服务器：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MODEL_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/path/to/fake-news/model_checkpoints/random_forest uvicorn --reload main:app\n")])])]),s("ul",[s("li",[t._v("构建 Chrome 扩展\n"),s("ul",[s("li",[t._v("现在，服务器已运行，将创建一个 Chrome 扩展，可以拨打 API 呼叫。")]),t._v(" "),s("li",[t._v("扩展目标是允许用户浏览互联网，以突出一些部分的文本（如新闻标题），并让扩展指示文本是假的还是真实的。。")]),t._v(" "),s("li",[t._v("核心组件是：content.js：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'loaded...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v('const FAKE_NEWS_URL = "http://127.0.0.1:8000/api/predict-fakeness";\nconst RED = "red";\nconst GREEN = "#4be371";')]),t._v(" "),s("p",[t._v("let spanSelection = null;")]),t._v(" "),s("p",[t._v('async function detectFakeNews(text) {\nconst data = {\ntext: text\n}\nreturn fetch(FAKE_NEWS_URL, {\nmethod: "POST",\nheaders: {\n"Content-Type": "application/json",\n},\nbody: JSON.stringify(data),\n});\n}')]),t._v(" "),s("p",[t._v('document.addEventListener("mouseup", (event) => {\nif (spanSelection) {\n// Reset and remove span selection\ndocument.body.removeChild(spanSelection);\nspanSelection = null;\n}\nlet text = ""\nif (window.getSelection) {\ntext = window.getSelection().toString();\n} else if (document.selection && document.selection.type != "Control") {\ntext = document.selection.createRange().text;\n}\nif (text === "") return;\ndetectFakeNews(text)\n.then(res => res.json())\n.then(data => {\nconst imgURL = chrome.runtime.getURL("images/trump_amca_48.png");\nconst spanElem = document.createElement("span");')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('        spanElem.className = "popup-tag";\n        spanElem.style.display = "flex";\n        spanElem.style.left = `${window.scrollX + event.clientX}px`;\n        spanElem.style.top = `${window.scrollY + event.clientY}px`;\n        let label;\n        if (!data.label) {\n            label = "FAKE!";\n            spanElem.style.backgroundColor = RED;\n        } else {\n            label = "REAL!";\n            spanElem.style.backgroundColor = GREEN;\n        }\n        spanElem.innerHTML = `\n            <img class="img-sty" src=${imgURL} height=32 width=32> ${label}\n        `;\n        document.body.appendChild(spanElem);\n        spanSelection = spanElem;\n\n    })\n    .catch((error) => {\n        console.error("Error:", error);\n    });;\n')])])]),s("p",[t._v("});")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('定义实际扩展的定义：manifest.json：\n```python\n  {\n    "name": "Fake News Detector",\n    "version": "1.0",\n    "description": "Detect fake news on your browser page",\n    "permissions": [\n      "activeTab",\n      "storage",\n      "declarativeContent"\n    ],\n    "browser_action": {\n      "default_icon": {\n        "16": "images/trump_amca_16.png",\n        "32": "images/trump_amca_32.png",\n        "48": "images/trump_amca_48.png",\n        "128": "images/trump_amca_128.png"\n      }\n    },\n    "icons": {\n      "16": "images/trump_amca_16.png",\n      "32": "images/trump_amca_32.png",\n      "48": "images/trump_amca_48.png",\n      "128": "images/trump_amca_128.png"\n    },\n    "web_accessible_resources": [\n      "images/trump_amca_16.png",\n      "images/trump_amca_32.png",\n      "images/trump_amca_48.png",\n      "images/trump_amca_128.png"\n    ],\n    "content_scripts": [\n      {\n        "matches": [\n          "*://*/*"\n        ],\n        "js": [\n          "content.js"\n        ],\n        "css": [\n          "content.css"\n        ],\n        "run_at": "document_end"\n      }\n    ],\n    "manifest_version": 2\n  }\n')])])]),s("ul",[s("li",[t._v("连续集成：\n"),s("ul",[s("li",[t._v("现在，将讨论机器学习项目背景下的持续集成。首先，什么是连续集成？连续集成（或 CI） 是一个更广泛的软件工程概念，它是指以集中的方式在多个贡献者之间实现代码更改自动化的做法。这通常涉及设置一个环境和模因，以便轻松跟踪、测试和验证代码更改。")]),t._v(" "),s("li",[t._v("将利用吉图布行动。请注意，您可以使用第三方工具，如特拉维斯 CI，但会使用 Github 的本地功能，因为方便。将定义以下操作：")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  name: run-tests\n  on: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  defaults:\n    run:\n      working-directory: /home/fake-news\n  jobs:\n    run-tests:\n      runs-on: ubuntu-latest\n      container:\n        image: custom-docker-image\n        credentials:\n          username: "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${{ secrets.DOCKERHUB_USERNAME }")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          password: "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${{ secrets.DOCKERHUB_PAT }")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      steps:\n        - name: Set PYTHONPATH "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" var\n          run: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PYTHONPATH='),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PYTHONPATH")]),t._v(':/home/fake-news"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GITHUB_ENV")]),t._v("\n        - name: Set GE_DIR "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" var\n          run: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GE_DIR='),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GITHUB_ENV")]),t._v("\n        - name: Run unit tests\n          run: pytest tests/\n        - name: Run great expectations data tests\n          working-directory: /home/fake-news/tests\n          run: python great_expectations/validate_data.py\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 此操作拉取自定义 Docker 图像（上面需要提供的自定义码头图像），执行一点环境设置，然后执行功能测试。自定义码头图像是通过以下多克文件构建的：\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  FROM python:3.8\n\n  ADD "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" /home/fake-news\n\n  WORKDIR /home/fake-news\n\n  RUN pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --no-cache-dir -r requirements.txt\n")])])]),s("ul",[s("li",[t._v("对于机器学习应用程序，项目的新贡献者应该很容易重新培训任何模型。为了实现这一目标，利用DVC。DVC 使能够做几件事：\n"),s("ul",[s("li",[t._v("版本使用类似 Git 的界面控制数据。")]),t._v(" "),s("li",[t._v("定义模型创建各个步骤的工作流程，如预处理、壮举化和培训。")]),t._v(" "),s("li",[t._v("首先，可以通过运行来跟踪原始数据集文件（即）data/raw/train2.tsv")]),t._v(" "),s("li",[t._v("DVC 的另一个非常强大的功能是能够定义版本可控的工作流，称为管道。这是通过在文件中创建阶段来完成的。看起来会是这样的：dvc.yaml")])])])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("  stages:\n    compute-credit-bins:\n      cmd: python scripts/compute_credit_bins.py --train-data-path data/processed/cleaned_train_data.json\n        --output-path data/processed/optimal_credit_bins.json\n      deps:\n      - data/processed/cleaned_train_data.json\n      outs:\n      - data/processed/optimal_credit_bins.json\n    normalize-and-clean-data:\n      cmd: python scripts/normalize_and_clean_data.py --train-data-path data/raw/train2.tsv\n        --val-data-path data/raw/val2.tsv --test-data-path data/raw/test2.tsv --output-dir\n        data/processed\n      deps:\n      - data/raw/test2.tsv\n      - data/raw/train2.tsv\n      - data/raw/val2.tsv\n      - scripts/normalize_and_clean_data.py\n      outs:\n      - data/processed/cleaned_test_data.json\n      - data/processed/cleaned_train_data.json\n      - data/processed/cleaned_val_data.json\n    train-random-forest:\n      cmd: python fake_news/train.py --config-file config/random_forest.json\n      deps:\n      - config/random_forest.json\n      - data/processed/cleaned_test_data.json\n      - data/processed/cleaned_train_data.json\n      - data/processed/cleaned_val_data.json\n      - data/processed/optimal_credit_bins.json\n      - fake_news/train.py\n      outs:\n      - model_checkpoints/random_forest\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 正如您所看到的，各种管道定义了一系列依赖性、要执行的命令以及该命令的输出。DVC 在检测何时应该重新运行管道方面很明智，因为依赖性已经改变，并且还会跟踪管道的输出。当涉及到复制像数据规范化/清洁这样的阶段时，它就像运行一样简单：\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("  dvc repro normalize-and-clean-data\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 到目前为止，已经在本地部署了模型，并以这种方式与服务器进行交互。但是，如果想要扩展应用程序（如果有 1000 多个用户会发生什么），需要找到一种方法，通过云提供商在远程服务器上部署模型，该提供商可以根据使用情况自动进行刻度。再次，将定义一个适当的文件如下：\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  FROM tiangolo/uvicorn-gunicorn-fastapi:python3.8 as base\n\n  ADD fake_news /home/fake-news/fake_news\n  ADD requirements.txt /home/fake-news/\n  ADD model_checkpoints/random_forest /home/fake-news/random_forest\n\n  WORKDIR /home/fake-news\n\n  ENV PYTHONPATH $PYTHONPATH:/home/fake-news\n\n  RUN pip install --no-cache-dir -r requirements.txt\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 此图像基于FastAPI Web 应用基础图像构建，只需将模型检查点嵌入其中即可。现在，可以执行以下容器化应用程序：\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  docker run -p 8000:80 -e MODEL_DIR="/home/fake-news/random_forest" -e MODULE_NAME="fake_news.server.main" created-image\n')])])]),s("ul",[s("li",[t._v("有了这个设置，可以轻松地在任何支持 Docker 的远程服务器上部署模型。这就是过渡到真正构建基于可扩展的机器学习应用的地方。可以更进一步，创建处理培训工作流程的图像，这将使能够轻松地在远程服务器上扩展培训作业，但这留给读者的练习。因此，完成了旋风之旅，从零开始构建一个完整的机器学习项目。")])]),t._v(" "),s("h3",{attrs:{id:"_3-tip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[t._v("#")]),t._v(" 3.Tip:")]),t._v(" "),s("h4",{attrs:{id:"ubuntu-gcc-安装及使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-gcc-安装及使用"}},[t._v("#")]),t._v(" ubuntu gcc 安装及使用")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("方法一： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" build-dep gcc\n方法二： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" build-essential\ngcc --version\n")])])]),s("h4",{attrs:{id:"linux-tar文件打包分割文件和解压"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-tar文件打包分割文件和解压"}},[t._v("#")]),t._v(" linux tar文件打包分割文件和解压")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("首先是压缩：\n$ tar -czvp -f skype_backup.tar.gz skype_backup\n\n分割：\n$ split -b 4000k skype_backup.tar.gz skype_backup_20090626.tar.gz. –verbose\n\n如上两句命令合并为一句：\n$ tar -czvp -f – skype_backup |split -b 4000k – skype_backup_20090626.tar.gz. –verbose\n\n合并文件：\n$ cat skype_backup_20090626.tar.gz.a* >skype_backup_cat.tar.gz\n\n解压：\n$ tar -zxvf skype_backup_cat.tar.gz\n\n如上两句合并为一句：\n$ cat skype_backup_20090626.tar.gz.a* |tar -zxv\n")])])]),s("h4",{attrs:{id:"error-pg-config-executable-not-found"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-pg-config-executable-not-found"}},[t._v("#")]),t._v(" Error: pg_config executable not found")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" psyconpg2-binary\n")])])]),s("h4",{attrs:{id:"libpcre-so-1-cannot-be-found"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#libpcre-so-1-cannot-be-found"}},[t._v("#")]),t._v(" libpcre.so.1 cannot be found")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装完Nginx之后，启动报错")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./nginx\n./nginx: error "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" loading shared libraries: libpcre.so.1: cannot "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" shared object file: No such "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or directory\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行ldd命令，找到Nginx的依赖共享库文件")]),t._v("\n$ ldd "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" /usr/local/nginx/sbin/nginx"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\nlinux-vdso.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00007fff1b74a000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibpthread.so.0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libpthread.so.0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b2600000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibcrypt.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libcrypt.so.1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b3a00000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibpcre.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" not found\nlibcrypto.so.6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libcrypto.so.6 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b4200000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibc.so.6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libc.so.6 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b1a00000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/lib64/ld-linux-x86-64.so.2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b1600000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibdl.so.2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libdl.so.2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b1e00000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibz.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /usr/lib64/libz.so.1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b3200000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对libpcre.so.0.0.1做软连接")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /usr/lib64/libpcre.so.0.0.1 libpcre.so.1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次执行ldd命令，就可以找到libpcre.so.1依赖库了。")]),t._v("\n$ ldd "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" /usr/local/nginx/sbin/nginx"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\nlinux-vdso.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00007fffd43d5000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibpthread.so.0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libpthread.so.0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b2600000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibcrypt.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libcrypt.so.1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b3a00000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibpcre.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libpcre.so.1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b1e00000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibcrypto.so.6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libcrypto.so.6 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b4200000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibc.so.6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libc.so.6 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b1a00000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/lib64/ld-linux-x86-64.so.2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b1600000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibdl.so.2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /lib64/libdl.so.2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00002aebb7623000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibz.so.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /usr/lib64/libz.so.1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x00000032b3200000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"docker部署jar包运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker部署jar包运行"}},[t._v("#")]),t._v(" Docker部署jar包运行")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方式一：")]),t._v(" "),s("ul",[s("li",[s("ol",[s("li",[t._v("上传jar到服务器的指定目录")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("在该目录下创建Dockerfile 文件 vi Dockerfile")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"3"}},[s("li",[t._v("然后将下面的内容复制到Dockerfile文件中")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('    FROM java:8\n    MAINTAINER bingo\n    ADD demo-0.0.1-SNAPSHOT.jar demo.jar\n    EXPOSE 8080\n    ENTRYPOINT ["java","-jar","demo.jar"]\n')])])]),s("ul",[s("li",[s("ol",{attrs:{start:"4"}},[s("li",[t._v("创建好Dockerfile文件之后，执行命令 构建镜像：")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    docker build -t my/demo .\n    # 注意最后的 .  表示 Dockerfile 文件在当前目录下 my/demo  构建之后镜像名称\n")])])]),s("ul",[s("li",[s("ol",{attrs:{start:"5"}},[s("li",[t._v("镜像构建成功之后，就可以运行容器了：")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    docker run -d --name demo -p 8080:8080 my/demo\n")])])]),s("ul",[s("li",[s("ol",{attrs:{start:"6"}},[s("li",[t._v("然后docker ps 看看你的容器有没有在运行即可")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"7"}},[s("li",[t._v("docker logs --tail  300 -f  demo  查看启动日志")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"8"}},[s("li",[t._v("如果docker run 的时候没有加 --restart=always ，然后已经运行的docker容器怎么设置自动重启？ 执行下面命令：")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    docker update –-restart=always demo \n")])])])]),t._v(" "),s("li",[s("p",[t._v("方式二： 这种方式就是运行一个jdk的容器，然后挂载其中的目录到宿主机，然后运行之后，就可以将需要运行的jar放在宿主机的挂载目录下，然后每次重新运行docker容器即可。不用每次发布需要重新构建docker容器，只需要替换宿主机中的jar包即可。")]),t._v(" "),s("ul",[s("li",[s("ol",[s("li",[t._v("在服务器中拉取jdk1.8的镜像")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    docker pull jdk8\n")])])]),s("ul",[s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("创建目录")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    cd /server/\n    mkdir deploy/jar\n")])])]),s("ul",[s("li",[s("ol",{attrs:{start:"3"}},[s("li",[t._v("构建容器")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    docker run -d \\\n    --restart=always \\\n    -v /server/deploy/jar:/jar -v /server/logs/demo:/mnt/logs/demo \\\n    -p 7778:7778 \\\n    --name demo \\\n    jdk8 /usr/bin/java -jar \\\n    -Duser.timezone=GMT+08 \\\n    /jar/demo-1.0.jar\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"_4-share"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[t._v("#")]),t._v(" 4.Share:")]),t._v(" "),s("p",[t._v("https://www.coder.work/article/4680159\njava - python中的Fernet类加密和java中的解密不起作用")]),t._v(" "),s("p",[t._v("https://blog.csdn.net/boling_cavalry/article/details/87904485\n用golang官方Docker镜像运行项目")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/Qian123/p/5707154.html\nJava提高篇——理解String 及 String.intern() 在实际中的应用")]),t._v(" "),s("p",[t._v("https://www.jianshu.com/p/8c207a5f2774\njava 方法内联")]),t._v(" "),s("p",[t._v("https://my.oschina.net/jimmywa/blog/3075665\n使用docker快速搭建本地kafka服务")]),t._v(" "),s("p",[t._v("https://blog.51cto.com/u_12462495/2163239\n如何简洁优雅地实现Kubernetes的服务暴露")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/phonecom/p/10995611.html\n使用docker搭建OpenResty开发环境")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/xiao987334176/p/9946915.html\nUbuntu 搭建docker registry 私有仓库")])])}),[],!1,null,null,null);a.default=e.exports}}]);