(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{410:function(a,s,t){"use strict";t.r(s);var e=t(42),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[a._v("#")]),a._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),a._v(" "),t("p",[a._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),a._v(" "),t("h3",{attrs:{id:"_1-algorithm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[a._v("#")]),a._v(" 1.Algorithm:")]),a._v(" "),t("p",[a._v("Valid Palindrome https://leetcode.com/submissions/detail/287704292/")]),a._v(" "),t("h3",{attrs:{id:"_2-review"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[a._v("#")]),a._v(" 2.Review:")]),a._v(" "),t("p",[a._v("https://markhneedham.com/blog/2008/09/15/clean-code-book-review/")]),a._v(" "),t("h4",{attrs:{id:"点评："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[a._v("#")]),a._v(" 点评：")]),a._v(" "),t("p",[a._v("文章作者谈到学习了《Principles, Patterns and Practices in C#》，其中讨论到关于书中作者推荐“Clean Code”的思想。关于“Clean Code”，描述了让代码像报纸文章一样阅读的想法，把重要的步骤放在头部。在进一步阅读越来越多的细节之前，我们应该能够大致了解它是如何运行的，细节步伐通过进一步将代码分解成许多小方法来实现。作者描述这时编写好代码的最好的书，建议在阅读敏捷原则、模式和实践之前先阅读这本书。最突出的关键思想是保持代码的简洁和表达能力——代码应该做你希望它做的事情，这样当你（或其他人）回来阅读时，就可以快速轻松地完成这项工作。同时最后三章案例给出了代码，确定了问题所在，提出了解决方案（并引用了它的名称），然后详细介绍了实现过程。")]),a._v(" "),t("h3",{attrs:{id:"_3-tip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[a._v("#")]),a._v(" 3.Tip:")]),a._v(" "),t("p",[a._v("Docker 常用操作")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除 null 镜像")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" docker rmi "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker image -f "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dangling=true"')]),a._v(" -q"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除所有镜像")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除容器")]),a._v("\ndocker stop "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -qa"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -qa"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除镜像")]),a._v("\ndocker rmi --force "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker images -q"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除名称中包含某个字符串的镜像")]),a._v("\ndocker rmi --force "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker images "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" some "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$3")]),a._v("}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入容器命令")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it 容器ID "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 镜像导出")]),a._v("\ndocker save -o ./imagename.tar imagename:tag\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 镜像导入")]),a._v("\ndocker load --input ./imagename.tar\n")])])]),t("h3",{attrs:{id:"_4-share"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[a._v("#")]),a._v(" 4.Share:")]),a._v(" "),t("p",[a._v("kafka-manager部署安装\nhttps://www.jianshu.com/p/cb412d587a21")])])}),[],!1,null,null,null);s.default=r.exports}}]);