(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{428:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[t._v("#")]),t._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),t._v(" "),a("p",[t._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),t._v(" "),a("h3",{attrs:{id:"_1-algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[t._v("#")]),t._v(" 1.Algorithm:")]),t._v(" "),a("p",[t._v("Unique Paths https://leetcode.com/submissions/detail/337271800/")]),t._v(" "),a("h3",{attrs:{id:"_2-review"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[t._v("#")]),t._v(" 2.Review:")]),t._v(" "),a("p",[t._v("https://dev.to/lydiahallie/javascript-visualized-prototypal-inheritance-47co\nJavaScript️可视化：原型继承")]),t._v(" "),a("h4",{attrs:{id:"点评："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[t._v("#")]),t._v(" 点评：")]),t._v(" "),a("p",[t._v("Lydia Hallie 通过 JavaScript 对象和方法的例子演示并生动的解释了原型继承这个概念 。")]),t._v(" "),a("p",[t._v("总结：")]),t._v(" "),a("ol",[a("li",[t._v("__proto__是对Dog.prototype对象的引用。这就是原型继承的全部内容：构造函数的每个实例都可以访问构造函数的原型,收益是\n为什么每次创建新对象时都创建一个新函数很消耗内存，相反可以将其添加到对象的prototype对象中。")]),t._v(" "),a("li",[t._v("对象的prototype本身是一个对象，实际上就是Object构造函数的实例。这意味着对象的prototype还包含一个__proto__属性，\n该属性是对Object.prototype！的引用。所有内置方法的来源都在原型链上可以找到。")]),t._v(" "),a("li",[t._v("ES6实际上为构造函数和原型使用了一种更简单的语法：类。类仅是构造函数的语法糖。一切仍然以相同的方式工作！\n一个类有一个constructor函数，与用ES5语法编写的构造函数一样。要添加到原型的属性是在类主体本身上定义的。\n在扩展类中，可以使用super关键字访问父类的构造函数。父类的构造函数期望的参数，在这种情况下，子类必须传把构造函数参数递给父类。")]),t._v(" "),a("li",[t._v("原型链不会永远持续下去。最终有一个原型等于null的Object.prototype对象：在这种情况下就是对象！如果尝试访问在本地或原型链上找不到的属性，undefined则会返回。")])]),t._v(" "),a("h3",{attrs:{id:"_3-tip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[t._v("#")]),t._v(" 3.Tip:")]),t._v(" "),a("ol",[a("li",[t._v("问题：vue-router 去除URL中的 # 号，故使用 history 路由模式，首页能正常访问，但刷新页面后，则出现 404 Not Found。\n使用默认 hash 路由模式，在本地与部署线上环境后都没有问题。")])]),t._v(" "),a("p",[t._v("分析：和前端路由冲突，需要在后端 Nginx 进行路由重定向。\n解决办法：在服务端nginx配置里添加 vue-route 的重定向配置：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("server\n{\n    listen 80;\n    server_name testwx.wangshibo.com;\n    index index.php index.html index.htm default.php default.htm default.html;\n    root /www/app/dist;\n\n    #vue-router配置\n    location / {\n        try_files $uri $uri/ @router;\n        index index.html;\n    }\n    location @router {\n        rewrite ^.*$ /index.html last;\n    }\n}\n\n")])])]),a("p",[t._v("2.问题：vue/cli3.0打包后html文件引入的是绝对路径修改成相对路径问题。\n分析：在 vue 中配置，通过 webpack 打包动态添加。\nhistory 路由模式只能在根目录，原理跟问题1相同。\nhash 路由模式可以不再根目录。\n解决办法：在 vue.config.js 配置：")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  publicPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"相对目录名"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("3.问题：把 vue 打包的文件整合到 springboot 工程\n分析：使用 springboot 静态资源机制\n只支持hash 路由模式，history 路由模式不支持,需要在 springboot 中做路由转发。\n解决办法：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".修改 vue 工程中 config/index.js 的 assetsPublicPath 改为 /dist/, build:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 中，不是 dev:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 的, 如下：\nbuild： "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\tassetsPublicPath: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' /dist/'")]),t._v(",\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(".执行 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build，会出现一个 dist 文件夹在 vue 项目目录中\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(".把 dist 文件夹中的所有文件复制到 springboot 的 resources/static/\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(".访问 http://localhost:8080/index.html/"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/")]),t._v("\n\n")])])]),a("p",[t._v("4.问题：vue v-html渲染后，样式不生效\n分析：html绑定渲染的内容可以理解为子组件的内容，如果是 scoped 子组件不会被加上对应的属性。\n解决办法：尝试去掉style 中 scoped属性后，问题解决")]),t._v(" "),a("div",{staticClass:"language-Html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("...\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-html")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data.head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n...\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("less"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v(" ----错误\n<style lang="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'less'")]),t._v("> ----正确\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../assets/css/bar.less'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_4-share"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[t._v("#")]),t._v(" 4.Share:")]),t._v(" "),a("p",[t._v("JavaScript原型链学习指南\nhttps://www.shuaihuajun.com/article/javascript-prototype-chain/index.html?_blank")])])}),[],!1,null,null,null);s.default=e.exports}}]);