(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{432:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"arts-2019-左耳听风社群活动-每周完成一个-arts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arts-2019-左耳听风社群活动-每周完成一个-arts"}},[t._v("#")]),t._v(" ARTS-2019 左耳听风社群活动--每周完成一个 ARTS")]),t._v(" "),a("p",[t._v("1.Algorithm： 每周至少做一个 leetcode 的算法题\n2.Review: 阅读并点评至少一篇英文技术文章\n3.Tip: 学习至少一个技术技巧\n4.Share: 分享一篇有观点和思考的技术文章")]),t._v(" "),a("h3",{attrs:{id:"_1-algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-algorithm"}},[t._v("#")]),t._v(" 1.Algorithm:")]),t._v(" "),a("p",[t._v("Jump Game https://leetcode.com/submissions/detail/356539265/")]),t._v(" "),a("h3",{attrs:{id:"_2-review"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-review"}},[t._v("#")]),t._v(" 2.Review:")]),t._v(" "),a("p",[t._v("https://streamsets.com/blog/machine-learning-with-tensorflow-and-kafka-in-data-collector/\n在 Data Collector 中使用 TensorFlow 进行实时机器学习")]),t._v(" "),a("h4",{attrs:{id:"点评："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#点评："}},[t._v("#")]),t._v(" 点评：")]),t._v(" "),a("p",[t._v("作者通过乳腺肿瘤分类为恶性或良性的用例，讲解如何使用 TensorFlow 模型进行预测和分类，使用StreamSets Data Collector 3.5.0 的 TensorFlow Evaluator。")]),t._v(" "),a("p",[t._v("一般ML分为两大类：")]),t._v(" "),a("ul",[a("li",[t._v("监督学习：监督学习是学习功能的机器学习任务，它根据示例输入-输出对，将输入映射到输出。")]),t._v(" "),a("li",[t._v("监督学习解决的常见业务问题：")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("二进制分类（学习预测分类值）")]),t._v(" "),a("ul",[a("li",[t._v("客户是否会购买特定产品？")]),t._v(" "),a("li",[t._v("这种癌症是恶性的还是良性的？")])])]),t._v(" "),a("li",[a("p",[t._v("多类分类（学习预测分类值）")]),t._v(" "),a("ul",[a("li",[t._v("给定的文本是否有毒，威胁或淫秽？")]),t._v(" "),a("li",[t._v("这种鸢尾花属植物，杂色或维吉尼亚的种类？")])])]),t._v(" "),a("li",[a("p",[t._v("回归（学习预测连续价值）")]),t._v(" "),a("ul",[a("li",[t._v("房屋的预测售价是多少？")]),t._v(" "),a("li",[t._v("明天在旧金山会有什么温度？")])])])]),t._v(" "),a("ul",[a("li",[t._v("无监督学习：允许我们在很少或根本不知道输出是什么的情况下解决问题。它涉及构建模型，其中过去数据的标签不可用。在这些类型的问题中，通过基于数据中的变量之间的关系对数据进行聚类来导出结构。")]),t._v(" "),a("li",[t._v("常见的神经网络和深度学习应用包括：")])]),t._v(" "),a("ol",[a("li",[t._v("计算机视觉/图像识别/物体检测")]),t._v(" "),a("li",[t._v("语音识别/自然语言处理（NLP）")]),t._v(" "),a("li",[t._v("推荐系统（产品，配对等）")]),t._v(" "),a("li",[t._v("异常检测（网络安全等）")])]),t._v(" "),a("p",[t._v("分析方法：\n使用 TensorFlow SavedModelBuilder 训练和导出模型后，只要将模型保存在Data Collector 可访问的位置，就可以在数据流管道中使用它进行预测或分类非常简单。")]),t._v(" "),a("p",[t._v("处理流程：")]),t._v(" "),a("ol",[a("li",[t._v("目录来源：")])]),t._v(" "),a("ul",[a("li",[t._v("从.csv文件加载乳腺癌记录")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("场转换器：")])]),t._v(" "),a("ul",[a("li",[t._v("此处理器将转换模型使用的所有输入乳腺癌记录功能")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("TensorFlow Evaluator *：")])]),t._v(" "),a("ul",[a("li",[t._v("保存的模型路径：指定要使用的预训练TF模型的位置。")]),t._v(" "),a("li",[t._v("模型标签：设置为“提供”，因为元图（在我们的导出模型中）旨在用于服务。")]),t._v(" "),a("li",[t._v("输入配置：指定在训练和导出模型期间配置的输入张量信息。")]),t._v(" "),a("li",[t._v("输出配置：指定在训练和导出模型期间配置的输出张量信息。")]),t._v(" "),a("li",[t._v("输出字段：我们要存储分类值的输出记录字段。")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("表达式计算器：")])]),t._v(" "),a("ul",[a("li",[t._v("此处理器评估模型输出/分类值0或1（存储在输出字段TF_Model_Classification中）并创建一个新记录字段'Condition'，其值分别为Benign或Malignant。")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("流选择器：")])]),t._v(" "),a("ul",[a("li",[t._v("该处理器评估癌症状况（良性或恶性）并将记录路由到相应的Kafka生产者。")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("Kafka Producers：")])]),t._v(" "),a("ul",[a("li",[t._v("输入记录以及模型输出/分类值有条件地路由到两个Kafka生产者进行进一步处理和分析。")])]),t._v(" "),a("p",[t._v("总结：\n文章通过 Data Collector 的 TensorFlow Evaluator, 使用提供预先训练的TF模型生成预测和/或分类，而无需编写任何自定义代码。")]),t._v(" "),a("h3",{attrs:{id:"_3-tip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-tip"}},[t._v("#")]),t._v(" 3.Tip:")]),t._v(" "),a("ol",[a("li",[t._v("Miniconda3 安装")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("官网 https://conda.io/miniconda.html\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Conda 管理环境")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 ")]),t._v("\nconda create -n rcnn "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("python")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除 ")]),t._v("\nconda remove -n rcnn --all\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名  ")]),t._v("\nconda create -n tf --clone rcnn\nconda remove -n rcnn --all\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 激活 rcnn 环境")]),t._v("\nactivate rcnn  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" activate test_py2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux/mac")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 退出环境")]),t._v("\ndeactivate\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有环境")]),t._v("\nconda info -e\n\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Pip 管理包")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新 pip")]),t._v("\npython -m pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --upgrade pip\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装命令")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" package_name\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装numpy,输入")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" numpy\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 tensorflow")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" tensorflow\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已安装的包")]),t._v("\npip list installed\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 搜索安装包")]),t._v("\npip search tensorflow\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同时安装多个包")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" numpy scipy pandas\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装指定版本的包")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("tensorflow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.12")]),t._v(".0\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载包")]),t._v("\npip remove tensorflow\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新包")]),t._v("\npip update tensorflow\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新环境中的所有包")]),t._v("\npip update --all\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("配置 tensorflow 环境")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除 tensorflow 已有环境")]),t._v("\nconda remove -n tensorflow -all\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 tensorflow 环境并指定 python 版本")]),t._v("\nconda create -n tensorflow "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("python")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入 tensorflow 环境")]),t._v("\nconda activate tensorflow\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新 tensorflow 环境的 pip")]),t._v("\npython -m pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --upgrade pip\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 tensorflow 包")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("tensorflow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.12")]),t._v(".0\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查 tensorflow 包是否安装好 tensorflow 1.12.0")]),t._v("\npip list installed \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 tensorflow 包")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("tensorflow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.12")]),t._v(".0\n\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("python 环境验证 tensorflow")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\na.进入 python 解释器\npython\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" tensorflow as tf\nnumpy 高级提示有个 api 马上废弃\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nb.numpy 降低版本\npip remove numpy\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("numpy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.15")]),t._v(".4\n\nc.重新执行a无异常提示\npython\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" tensorflow as tf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hello "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf.constant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Tansorflow"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sess "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf.Session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sess.run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("交互式开发环境验证 tensorflow")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\na.安装 jupyter\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" jupyter\n\nb.生成 ipykernel\npython -m ipykernel "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --user --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tensorflow\n\nc.查看 ipykernel\njupyter kernelspec list\n\nd.打开 jupyter\njupyter notbook\n\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("容器环境验证 tensorflow (忽略 docker 环境安装)")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("a.下载 tensorflow 镜像\ndocker pull tensorflow/tensorflow:nightly-jupyter\n\nb.启动交互式 tensorflow 容器\ndocker run -it --rm -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v(":8888 -v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PWD")]),t._v(":/tf/notebooks tensorflow/tensorflow:nightly-jupyter\n\n")])])]),a("h3",{attrs:{id:"_4-share"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-share"}},[t._v("#")]),t._v(" 4.Share:")]),t._v(" "),a("p",[t._v("高频dom操作和页面性能优化探索\nhttps://feclub.cn/post/content/dom\n重定向 CORS 跨域请求\nhttps://harttle.land/2016/12/30/cors-redirect.html\nCORS 跨域发送 Cookie\nhttps://harttle.land/2016/12/28/cors-with-cookie.html\n自定义编程语言的实现\nhttps://www.jianshu.com/p/6a2f4ae4e099")])])}),[],!1,null,null,null);s.default=e.exports}}]);